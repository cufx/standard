<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
	targetNamespace="http://cufxstandards.com/v4/Account.xsd"
	version="4.4.$Revision$"
	xmlns="http://cufxstandards.com/v4/Account.xsd"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:meta="http://cufxstandards.com/v4/Meta.xsd"
	xmlns:party="http://cufxstandards.com/v4/Party.xsd"
	xmlns:common="http://cufxstandards.com/v4/Common.xsd"
	xmlns:relationship="http://cufxstandards.com/v4/Relationship.xsd"
	xmlns:contact="http://cufxstandards.com/v4/Contact.xsd"
	xmlns:feeSchedule="http://cufxstandards.com/v4/FeeSchedule.xsd"
	xmlns:transaction="http://cufxstandards.com/v4/Transaction.xsd"

	elementFormDefault="qualified"
	attributeFormDefault="unqualified">

	<xs:import namespace="http://cufxstandards.com/v4/Common.xsd" schemaLocation="Common.xsd" />
	<xs:import namespace="http://cufxstandards.com/v4/Meta.xsd" schemaLocation="Meta.xsd" />
	<xs:import namespace="http://cufxstandards.com/v4/Party.xsd" schemaLocation="Party.xsd" />
	<xs:import namespace="http://cufxstandards.com/v4/CredentialGroup.xsd" schemaLocation="CredentialGroup.xsd" />
	<xs:import namespace="http://cufxstandards.com/v4/Relationship.xsd" schemaLocation="Relationship.xsd" />
	<xs:import namespace="http://cufxstandards.com/v4/Contact.xsd" schemaLocation="Contact.xsd" />
	<xs:import namespace="http://cufxstandards.com/v4/FeeSchedule.xsd" schemaLocation="FeeSchedule.xsd" />
	<xs:import namespace="http://cufxstandards.com/v4/Transaction.xsd" schemaLocation="Transaction.xsd" />

	<xs:element name= "accountList" type ="AccountList">
		<xs:annotation>
			<xs:documentation>
				The accounts collection/array contains all the accounts, for instance, that the credential set is
				authorized to access at the Institution based on applied filters.
			</xs:documentation>
		</xs:annotation>
	</xs:element>

	<xs:complexType name="AccountList">
		<xs:annotation>
			<xs:documentation>
				The accounts collection/array contains all the accounts, for instance, that the credential set is
				authorized to access at the Institution based on applied filters.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="common:ListBase">
				<xs:sequence>
					<xs:element name="account" type="Account" minOccurs="0" maxOccurs="unbounded">
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="Account">
		<xs:complexContent>
			<xs:extension base="AccountBase">
				<xs:sequence>
					<xs:element name="idType" type="IdType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Used when requesting and receiving reserved account numbers, before the account record is created.
								Reserving account numbers is an optional additional step that is typically done to produce documentation
								marked with the account number that must be completed and signed before the account record is created.
								The reserved number is then provided when creating the account.
								The account ID should be presumed actual if this field is absent.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="description" type="xs:string"  minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The account description is the textual representation of the account.
								This value is visible to the user and must be human-readable.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="subType" type="xs:string"   minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The account subtype identifies the specific account type
								that the back end system will recognize.
								Deprecated - See accountSubType in AccountBase. - Planned removal in v5.0.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountEscheatDate" type="xs:date"   minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The date that Escheatment was applied to the account.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountEscheatAmount" type="common:Money"   minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The amount that was transfered as a result of Escheatment.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="chargeOffDate" type="xs:date"   minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The date that the account was charged off.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="chargeOffAmount" type="common:Money"   minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The amount that was charged off.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountNickName" type="xs:string"   minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Description by the party or user that overrides the default description.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="branch" type="xs:string"   minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Name or number identifying which branch owns the account.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="actualBalance" type="common:Money"  minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Negative, zero or positive amount.
								If this is a loan, any balance owed to the financial institution will show as a positive amount.
								If this is a deposit product, if the product is overdrawn it will be a negative amount.
								Positive is assumed if the sign does not appear in the data.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="availableBalance" type="common:Money"  minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Negative, zero or positive amount.
								If this is a loan, any balance owed to the financial institution will show as a positive amount.
								If this is a deposit product, if the product is overdrawn it will be a negative amount.
								Positive is assumed if the sign does not appear in the data.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cashAdvanceAvailableBalance" type="common:Money"  minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The current amount available that may be withdrawn as a cash advance. Limited to the lesser of availableBalance or cashAdvanceBalance.
								Zero or positive amount.
								Positive is assumed if the sign does not appear in the data.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cashAdvanceBalance" type="common:Money"  minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The current dollar amount that has been withdrawn as cash advances.
								Zero or positive amount.
								Positive is assumed if the sign does not appear in the data.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="cashAdvanceLimit " type="common:Money"  minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The total dollar amount that may be withdrawn as a cash advance from the account.
								Zero or positive amount.
								Positive is assumed if the sign does not appear in the data.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="minimumBalance" type="common:Money" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The minimum balance that an account may have.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="externalAccountBankAddress" type="common:Address" minOccurs ="0" maxOccurs ="1">
						<xs:annotation>
							<xs:documentation>
								To Address of the bank used for wire transfer.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="externalAccountSWIFTCode" type="xs:string" minOccurs ="0" maxOccurs ="1">
						<xs:annotation>
							<xs:documentation>
								SWIFTCode for wire transfer.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="externalAccountIBANCode" type="xs:string" minOccurs ="0" maxOccurs ="1">
						<xs:annotation>
							<xs:documentation>
								IBAN of external institution, used for wire transfers.  This replaces the micrAccountNumber
								for certain financial institutions in foreign nations, and no routing or SWIFT code is
								necessary when an IBAN (and potentially bank code, below) is provided to identify the account.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="externalAccountBankCode" type="xs:string" minOccurs ="0" maxOccurs ="1">
						<xs:annotation>
							<xs:documentation>
								Bank code, required (in addition to other identifiers) for institutions in certain foreign nations,
								used for wire transfers.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="externalAccountFlag" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								True for an external account, false for an internal account.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="externalAccountVerified" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Default is false.  When user confirms microdeposit, this becomes true.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="externalTransferFrom" type="xs:boolean"  minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								True when transfers are allowed from external account.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="externalTransferTo" type="xs:boolean"  minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								True when transfers are allowed to external account.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transferFrom" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								True when transfers are allowed from this account.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transferTo" type="xs:boolean" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								True when transfers are allowed to this account.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="rateType" type="RateType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Whether the rate type is fixed or variable based on some index.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="sourceCode" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								FI defined code that identifies the source of the application that created
								the account such as customer request, cross sale, counter offer, promo, etc.
							</xs:documentation >
						</xs:annotation >
					</xs:element >
					<xs:element name="partyIdList" type="party:PartyIdList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								A collection of party ID’s that uniquely identify each party associated to this account.
								To determine the ownership level of each party on the account,
								the party list in the associated product (loan, deposit) will contain the relationship details.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="relationshipId" type="relationship:RelationshipId" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The relationship ID that the account belongs to.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="accountNoteList" type="common:NoteList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The list of notes on the account.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="customData" type="common:CustomData"  minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Account level name/data pairs list of fields that are not yet available in the general specification.
								This should be used as a LAST RESORT as any customizations will not be supported by all data providers
								or processed by all client applications. ANY use of this field must be reported to the architecture or
								working group committee to ensure that fields are somehow handled in the future release of specifications.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="meta" type="meta:Meta" minOccurs="0"	maxOccurs="1" >
						<xs:annotation>
							<xs:documentation>
								For each account type, optional meta information MAY be provided with these tags depending
								upon the account type returned.
								Account types of Checking, Savings, PrePaidCard use checkingSavingsMeta.
								Account types of Loan, CommercialLoan, Installment, OtherLoan use loanMeta.
								Account type of CreditCard use creditCardMeta.
								Account type of Investment use investmentMeta or checkingSavingsMeta.
								Account types of LineOfCredit, CommercialLineOfCredit use lineOfCreditMeta.
								Account type of Mortgage use mortgageMeta.
								Account type of Other may use any of the defined meta, but additional endpoint documentation recommended.
								Account type of GeneralLedger no meta defined
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="transactionList" type="transaction:TransactionList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								If there's a start date where provided or required, the transaction list collection/array
								should remain empty if no transactions were posted during the provided date period.
								In this case, the Data Provider should still return all other account information.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="interestPostingFrequency" type="common:FrequencyType" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The time interval for posting interest to the account.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="withholdingsInfoList" type="common:WithholdingsInfoList" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The list of withholding information that is applicable to the account.
							</xs:documentation>
						</xs:annotation>
					</xs:element>		
					<xs:element name="overDraftProtectionAccountId" type="AccountId" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The associated overdraft protection account.  
								The Account ID is intended and recommended to be a persistent and unique identifier for the account.
								It should be unique for all users across the institution and remain the same over the life of the account.
								It may contain a composite set of elements to create a unique key. 
								In observed business practice Account ID is often a non-unique value and creates a unique key in combination 
								with Account Type.  The accountAccountTypeList filter is designed to support this condition. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="overDraftProtectionAccountType" type="AccountType"  minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The associated overdraft protection account type.
								The account type is the textual representation of the kind of account.
								This value is visible to the user and must be human-readable.
								Note: CDs and MONEY MARKETS can be denoted as INVESTMENT.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="overDraftProtectionAccountSubType" type="AccountSubType"   minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The associated overdraft protection account sub type.
								The account subtype identifies the specific account type that the back end system will recognize.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:simpleType name="IdType">
		<xs:annotation>
			<xs:documentation>
				Whether the ID is actual, or simply reserved.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Reserved"/>
			<xs:enumeration value="Actual"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="RateType">
		<xs:annotation>
			<xs:documentation>
				Whether the rate type is fixed or variable based on some index.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Fixed" />
			<xs:enumeration value="Variable" />
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="TotalToDateList">
		<xs:complexContent>
			<xs:extension base="common:ListBase">
				<xs:sequence>
					<xs:element name="totalToDate" type="TotalToDate" minOccurs="0" maxOccurs="unbounded" >
						<xs:annotation>
							<xs:documentation>
								A list of aggregate totals of type TotalsToDate, i.e. YTD Dividend, MTD Interest.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="TotalToDate">
		<xs:annotation>
			<xs:documentation>
				An aggregation of total amount of money based on a start and end date/time frequency.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="xs:string" minOccurs="0" maxOccurs ="1">
				<xs:annotation>
					<xs:documentation>
						Unique identifier for a total to date aggregation.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="TotalToDateType" minOccurs="0" maxOccurs ="1">
				<xs:annotation>
					<xs:documentation>
						Type of totals aggregation for a fixed period of time.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="totalAmount" type="common:Money" minOccurs="0" maxOccurs ="1">
				<xs:annotation>
					<xs:documentation>
						The sum amount of money for the totals to date.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="frequencyStartDateTime" type="xs:dateTime" minOccurs="0" maxOccurs ="1">
				<xs:annotation>
					<xs:documentation>
						The start date/time for the frequency of the aggregate amount of TotalsToDate, i.e. 20XX-01-01.
						The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ
						(2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are
						supported.  The time is assumed to be 00:00Z if omitted.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="frequencyEndDateTime" type="xs:dateTime" minOccurs="0" maxOccurs ="1">
				<xs:annotation>
					<xs:documentation>
						The end date/time for the frequency of the aggregate amount of TotalsToDate, i.e. 20XX-12-31.
						The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ
						(2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are
						supported.  The time is assumed to be 00:00Z if omitted.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="TotalToDateType">
		<xs:annotation>
			<xs:documentation>
				Type of totals aggregation for a fixed period of time.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Interest"></xs:enumeration>
			<xs:enumeration value="Dividend"></xs:enumeration>
			<xs:enumeration value="Witholding"></xs:enumeration>
			<xs:enumeration value="Fee"></xs:enumeration>
			<xs:enumeration value="Insurance"></xs:enumeration>
			<xs:enumeration value="Refund"></xs:enumeration>
			<xs:enumeration value="Other"></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="AccountIdList">
		<xs:annotation>
			<xs:documentation>
				The list of account IDs that should have their associated accounts either returned or affected
				by a read, update or delete request.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="common:ListBase">
				<xs:sequence>
					<xs:element name="accountId" type="AccountId" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								An account ID that should have its associated accounts either returned or affected
								by a read, update or delete request.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="AccountMicrList">
		<xs:annotation>
			<xs:documentation>
				The list of account MICR's that should have their associated accounts either returned or affected
				by a read, update or delete request.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="common:ListBase">
				<xs:sequence>
					<xs:element name="micrAccountNumber" type="MicrAccountNumber" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								An account MICR that should have its associated accounts either returned or affected
								by a read, update or delete request.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="AccountBase">
		<xs:sequence>
			<xs:element name="accountId" type="AccountId" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The Account ID is intended and recommended to be a persistent and unique identifier for the account.
						It should be unique for all users across the institution and remain the same over the life of the account.
						It may contain a composite set of elements to create a unique key. 
						In observed business practice Account ID is often a non-unique value and creates a unique key in combination 
						with Account Type.  The accountAccountTypeList filter is designed to support this condition. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="AccountType"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The account type is the textual representation of the kind of account.
						This value is visible to the user and must be human-readable.
						Note: CDs and MONEY MARKETS can be denoted as INVESTMENT.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountSubType" type="AccountSubType"   minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The account subtype identifies the specific account type that the back end system will recognize.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="openDate" type="xs:date"   minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The date that the account was opened.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="closeDate" type="xs:date"   minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The date that the account was closed.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountStatus" type="AccountStatus"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The status of the account.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountSubStatus" type="AccountSubStatus" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The sub status of the account by account status.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="micrAccountNumber" type="MicrAccountNumber"  minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The account number portion of a draft or line of credit MICR line.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="routingNumber" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Routing number for the account.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="displayAccountId" type="xs:string" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						The account ID as a masked or obfuscated representation of the Account ID ('accountId'). This can be used for display
						or document generation purposes as a security precaution, or in cases where the 'accountId' element has been encrypted or tokenized.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="AccountType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Checking">
				<xs:annotation>
					<xs:documentation>
						Checking account, i.e., checks can be written against the account.
						Money market accounts can be included here or in money markets.  It's up to the institution.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Savings">
				<xs:annotation>
					<xs:documentation>
						Savings and club accounts.  This can optionally include CDs, but it's up to the institution.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Loan">
				<xs:annotation>
					<xs:documentation>
						Auto loans, etc. Loans that are NOT lines of credit or credit cards.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCard">
				<xs:annotation>
					<xs:documentation>
						Loan behind the credit card.  Note the actual card information in the card object.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LineOfCredit">
				<xs:annotation>
					<xs:documentation>
						Loan that is a line of credit but NOT a credit card.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Mortgage">
				<xs:annotation>
					<xs:documentation>
						Loan that is made in exchange for taking title of property.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Investment">
				<xs:annotation>
					<xs:documentation>
						Investment accounts such as brokerage and this can optionally include CDs and/or
						money markets, but it's up to the institution.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PrePaidCard">
				<xs:annotation>
					<xs:documentation>
						This account is a special type of checking account connected to a pre-paid card.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>
						Other account type.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Installment">
				<xs:annotation>
					<xs:documentation>
						Loan that is made in installments. Loan is typically unsecured. 
						This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CommercialLoan">
				<xs:annotation>
					<xs:documentation>
						Loan that is a made to a business organization. 
						This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CommercialLineOfCredit">
				<xs:annotation>
					<xs:documentation>
						Line of Credit that is a made to a business organization. 
						This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GeneralLedger">
				<xs:annotation>
					<xs:documentation>
						A general ledger account of the financial institution. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OtherLoan">
				<xs:annotation>
					<xs:documentation>
						A loan account type that has not been prevously defined.  
						This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="AccountTypeList">
		<xs:complexContent>
			<xs:extension base="common:ListBase">
				<xs:sequence>
					<xs:element name="accountType" type="AccountType" minOccurs="0" maxOccurs ="unbounded">
						<xs:annotation>
							<xs:documentation>
								Collection of account types to return in a filter request.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:simpleType name="MicrAccountNumber">
		<xs:restriction base="xs:string">
			<xs:annotation>
				<xs:documentation>
					The account number portion of a draft or line of credit MICR line.
				</xs:documentation>
			</xs:annotation>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="AccountId">
		<xs:restriction base="xs:string">
			<xs:annotation>
				<xs:documentation>
					The account ID is a persistent and unique identifier for the account.
					It must be unique for all users across the institution and remain the same over the life of the account.
				</xs:documentation>
			</xs:annotation>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="AccountStatus">
		<xs:annotation>
			<xs:documentation>
				Intended choice - Due to cross language serialization issues the choice construct has been removed.
				It is the responsibility of the implementer to add programmatic logic for this complex type to detect,
				handle and or error when population of more than one element is present.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="depositAccountStatus" type="DepositAccountStatus" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Current status if account is a deposit
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="investmentStatus" type="InvestmentStatus" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Current status if account is an investment
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="loanAccountStatus" type ="LoanAccountStatus" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						Current status if account is a loan
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="AccountStatusList">
		<xs:complexContent>
			<xs:extension base="common:ListBase">
				<xs:sequence>
					<xs:element name="accountStatusPair" type="AccountStatusPair" minOccurs="0" maxOccurs ="unbounded">
						<xs:annotation>
							<xs:documentation>
								Collection of account status and sub status pairs to return in a filter request.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="AccountStatusPair">
		<xs:sequence>
			<xs:element name="accountStatus" type="AccountStatus" minOccurs="0" maxOccurs ="1">
				<xs:annotation>
					<xs:documentation>
						Account Status to return in a filter request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountSubStatus" type="AccountSubStatus" minOccurs="0" maxOccurs ="1">
				<xs:annotation>
					<xs:documentation>
						Account Sub Status to return in a filter request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="AccountAccountTypeList">
		<xs:annotation>
			<xs:documentation>
				Deprecated - the type AccountAccountTypeList will be removed in v5.0. Use AccountIdentificationList 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="common:ListBase">
				<xs:sequence>
					<xs:element name="accountAccountTypePair" type="AccountAccountTypePair" minOccurs="0" maxOccurs ="unbounded">
						<xs:annotation>
							<xs:documentation>
								Collection of account and account type pairs to return in a filter request.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="AccountAccountTypePair">
		<xs:annotation>
			<xs:documentation>
				Deprecated - the type AccountAccountTypePair will be removed in v5.0. Use AccountIdentification 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="accountId" type="AccountId" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						An account ID that should have its associated accounts either returned or affected
						by a read, update or delete request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountType" type="AccountType" minOccurs="0" maxOccurs ="1">
				<xs:annotation>
					<xs:documentation>
						Account type to return in a filter request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="AccountIdentificationList">
		<xs:annotation>
			<xs:documentation>
				Collection of account identifications to associate accounts affected by a read, update or delete request. 
				This filter supports financial institutions that have a complex account identification structure to establish a unique key.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="common:ListBase">
				<xs:sequence>
					<xs:element name="accountIdentification" type="AccountIdentification" minOccurs="0" maxOccurs ="unbounded">
						<xs:annotation>
							<xs:documentation>
								The set of account identification elements to specify accounts for a read, update or delete request. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="AccountIdentification">
		<xs:annotation>
			<xs:documentation>
				The set of account identification elements to specify accounts for a read, update or delete request. 
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="accountId" type="AccountId" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>
						An account ID that should have its associated accounts either returned or affected
						by a read, update or delete request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountType" type="AccountType" minOccurs="0" maxOccurs ="1">
				<xs:annotation>
					<xs:documentation>
						Account type that should have its associated accounts either returned or affected
						by a read, update or delete request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountSubType" type="AccountSubType" minOccurs="0" maxOccurs ="1">
				<xs:annotation>
					<xs:documentation>
						The account subtype identifies the specific account type that the back end system will recognize and 
						that should have its associated accounts either returned or affected by a read, update or delete request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accountToFromIndicator" type="AccountToFromIndicator" minOccurs="0" maxOccurs ="1">
				<xs:annotation>
					<xs:documentation>
						AccountToFromIndicator is used to filter for account identifications in messages that have TO and FROM account structure. 
						If a value is not present then the search criteria should evaluate both To and From account structures if applicable.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
	<xs:simpleType name="DepositAccountStatus">
		<xs:annotation>
			<xs:documentation>
				Account status related to deposit account.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Active" >
				<xs:annotation>
					<xs:documentation>
						Account is open and active.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Approved" >
				<xs:annotation>
					<xs:documentation>
						Account has been approved, not yet active.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargedOff" >
				<xs:annotation>
					<xs:documentation>
						Account is charged off.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeOffClosed " >
				<xs:annotation>
					<xs:documentation>
						Account is charged off and closed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Closed" >
				<xs:annotation>
					<xs:documentation>
						Account has been closed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ClosedReadyToPurge" >
				<xs:annotation>
					<xs:documentation>
						Account is closed and ready to be purged.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Dormant" >
				<xs:annotation>
					<xs:documentation>
						Account is open, but is dormant due to inactivity.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Escheated" >
				<xs:annotation>
					<xs:documentation>
						Account is escheated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Inactive" >
				<xs:annotation>
					<xs:documentation>
						Account is open and Inactive.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Incomplete" >
				<xs:annotation>
					<xs:documentation>
						Account is not open or active, and is incomplete.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Locked" >
				<xs:annotation>
					<xs:documentation>
						Account is locked.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Matured" >
				<xs:annotation>
					<xs:documentation>
						Account has matured due to conditions being reached.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Open" >
				<xs:annotation>
					<xs:documentation>
						Account is open and active.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Opening" >
				<xs:annotation>
					<xs:documentation>
						Account is opening, not yet active.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Other" >
				<xs:annotation>
					<xs:documentation>
						Account is in a status not defined by enumerations. See AccountSubStatus.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RenewPending" >
				<xs:annotation>
					<xs:documentation>
						Account is pending renewal.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Reserved" >
				<xs:annotation>
					<xs:documentation>
						Account and or account number is reserved from use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Restricted" >
				<xs:annotation>
					<xs:documentation>
						Account and or account number is restricted from use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Unfunded" >
				<xs:annotation>
					<xs:documentation>
						Account unfunded or underfunded.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="InvestmentStatus">
		<xs:annotation>
			<xs:documentation>
				Account status related to investment account.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Active" >
				<xs:annotation>
					<xs:documentation>
						Account is open and active.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Closed" >
				<xs:annotation>
					<xs:documentation>
						Account has been closed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Dormant" >
				<xs:annotation>
					<xs:documentation>
						Account is open, but is dormant due to inactivity.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Escheated" >
				<xs:annotation>
					<xs:documentation>
						Account is escheated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Incomplete" >
				<xs:annotation>
					<xs:documentation>
						Account is not open or active, and is incomplete.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Locked" >
				<xs:annotation>
					<xs:documentation>
						Account is locked.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Originating" >
				<xs:annotation>
					<xs:documentation>
						Account is originating, not yet active.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Other" >
				<xs:annotation>
					<xs:documentation>
						Account is in a status not defined by enumerations. See AccountSubStatus.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Restricted" >
				<xs:annotation>
					<xs:documentation>
						Account and or account number is restricted from use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Unfunded" >
				<xs:annotation>
					<xs:documentation>
						Account unfunded or underfunded.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Matured" >
				<xs:annotation>
					<xs:documentation>
						Account has matured due to conditions being reached.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="LoanAccountStatus">
		<xs:annotation>
			<xs:documentation>
				Account status related to loan account.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Active" >
				<xs:annotation>
					<xs:documentation>
						Account is open and active.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Approved" >
				<xs:annotation>
					<xs:documentation>
						Account has been approved, not yet active.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeOff" >
				<xs:annotation>
					<xs:documentation>
						Account is in charge off.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Closed" >
				<xs:annotation>
					<xs:documentation>
						Account has been closed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ClosedRemainingBalances" >
				<xs:annotation>
					<xs:documentation>
						Account has been closed with remaining balances, open to accepting payments.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Dormant" >
				<xs:annotation>
					<xs:documentation>
						Account is open, but is dormant due to inactivity.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Escheated" >
				<xs:annotation>
					<xs:documentation>
						Account is escheated.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Incomplete" >
				<xs:annotation>
					<xs:documentation>
						Account is not open or active, and is Incomplete.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="InRepossession" >
				<xs:annotation>
					<xs:documentation>
						Account is in repossession.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LoanDenied" >
				<xs:annotation>
					<xs:documentation>
						Account is not active, or open. Loan denied.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Locked" >
				<xs:annotation>
					<xs:documentation>
						Account is locked.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Matured" >
				<xs:annotation>
					<xs:documentation>
						Account has matured due to conditions being reached.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NonAccrual" >
				<xs:annotation>
					<xs:documentation>
						Account is non accrual.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Originating" >
				<xs:annotation>
					<xs:documentation>
						Account is originating, not yet active.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Other" >
				<xs:annotation>
					<xs:documentation>
						Account is in a status not defined by enumerations. See AccountSubStatus.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Preallocated" >
				<xs:annotation>
					<xs:documentation>
						Account is has been preallocated, not open or active.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RenewPending" >
				<xs:annotation>
					<xs:documentation>
						Account is pending renewal.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SetupInProcess" >
				<xs:annotation>
					<xs:documentation>
						Account set up in process, not open or active.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SpecialProcessing" >
				<xs:annotation>
					<xs:documentation>
						Account is in special processing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Restricted" >
				<xs:annotation>
					<xs:documentation>
						Account and or account number is restricted from use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Unfunded" >
				<xs:annotation>
					<xs:documentation>
						Account is not yet funded.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="AccountSubStatus">
		<xs:restriction base="xs:string">
			<xs:annotation>
				<xs:documentation>
					For use to support additional acount sub statuses not present in enumerations.
				</xs:documentation>
			</xs:annotation>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AccountSubType">
		<xs:restriction base="xs:string">
			<xs:annotation>
				<xs:documentation>
					The account subtype identifies the specific account type that the back end system will recognize.
				</xs:documentation>
			</xs:annotation>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="AccountToFromIndicator">
		<xs:annotation>
			<xs:documentation>
				AccountToFromIndicator is used to filter for account identifications in messages that have TO and FROM account structure. 
				If a value is not present then the search criteria should evaluate both To and From account structures if applicable.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="To" >
				<xs:annotation>
					<xs:documentation>
						Return or affect accounts identified as the To account, or destination account. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="From" >
				<xs:annotation>
					<xs:documentation>
						Return or affect accounts identified as the From account, or source account. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
